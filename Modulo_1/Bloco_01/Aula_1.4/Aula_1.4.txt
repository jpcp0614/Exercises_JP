Unix & Bash - Parte II

cat	tb recebe valores que o usuario digita
>	atribuir valores (dá pra enviar valores para outro arquivo tb (cat x.txt y.txt > z.txt)
>>	acrescentar mais informações no arquivo já existente
ctrl+d	finaliza
sort	ordena em ordem crescente
sort <	ordena em ordem crescente no output (somente na tela do terminal)
who	quem está usando, quem tem acesso no terminal
	| sort é para mostrar em ordem alfabética
	| wc -l quantidade de usuários

---------------------------------------------------------------------------
	
# Considere o arquivo nomes.txt para os exemplos a seguir
# Seu conteúdo inicial é:
Ana
Maria
João

# O > redireciona a saída padrão para um arquivo, sendo assim
# caso haja algum conteúdo no arquivo, ele será substituído

cat > nomes.txt
# Digite o nome "Amanda" e encerre o cat (Ctrl + D)

cat nomes.txt
# Resultado
Amanda

# O >> anexa a saída padrão a um arquivo. Sendo assim, ele adiciona
# o que for digitado ao final do arquivo em questão

cat >> nomes.txt
# Digite o nome "Fernanda", depois `enter` e o nome "Fabiano", e encerre o cat (Ctrl + D)

cat nomes.txt
# Resultado
Amanda
Fernanda
Fabiano

# O | canaliza a saída do primeiro comando para a entrada do segundo,
# dessa forma conseguimos realizar comandos de forma sucessiva

# Considere que queremos uma lista com todos os nomes que contenham
# a letra "F" e que nosso resultado esteja em ordem alfabética
# Para isso podemos realizar o comando abaixo

grep F nomes.txt | sort
# Resultado
Fabiano
Fernanda

---------------------------------------------------------------------------

ls -l	acessos, tamanho, dia e hora de alteração, etc

r	vc pode ler o arquivo ou diretório
w	vc pode editar o arquivo ou diretório
x	permite executar o arquivo ou acessar o diretório pelo comando cd
-	hífen no ínicio da sequência indica que é um arquivo comum
d	letra d no início da sequência indica que é um diretório

sequência tem 4 grupos
1) - ou d	(arquivo comum ou diretório)
2) rwx		(ler, editar, executar)...quando tem hífen é que no pode fazer algo relacionado a posição de uma das três letras
3) r--		(grupo só pode ler)
4) r--		(outros usuários só podem ler)


chmod	alterar as permissões no arquivo
	u somente para o usuário
	g para o grupo
	o outros usuários
	a para todo mundo
	- retirar permissão
	+ acrescentar permissão
	= deixar como está
	
r	= 4 ler
w	= 2 editar
x	= 1 executar
---	= 0 todos os acessos negados

ps	lista de processos sendo executados
sleep	para o terminal durante um tempo (5 segundos, por exemplo) & (background)
ctrl+z	suspende
bg	retorna o processo (atrás, background)
jobs	mostra os processos que estão sendo executados
fg %1	retorna o processo a frente, %número da linha do processo
crtl+c	encerra o processo
kill %1	encerra o processo em background (com o número da linha do processo)
	tb dá pra fazer com o número do PID do processo Kill PID
	-9 PID forçar o encerramento do processo

--------------------------------------------------------------------------------------
find	pesquisar arquivos com certos parâmentros

# Para listar todos os arquivos que terminam em .txt
find . -name "*.txt"

# Para localizar todos os diretórios
find . -type d

# Para localizar todos os arquivos
find . -type f

# Localizar tanto arquivos quanto diretórios que comecem
# por algum trecho
find ./teste -name exemplo*
# Resultado
./teste/exemplo.txt
./teste/exemplo

# Localizar somente arquivos que comecem por algum trecho
find ./teste -type f -name "exemplo*"
# Resultado
./teste/exemplo.txt

# Localizar somente diretórios que comecem por algum trecho
find ./teste -type d -name "exemplo*"
# Resultado
./teste/exemplo


history	histórico

# Mostra o histórico de comandos
history
# Pegar os últimos 10 comandos
history | tail

echo	mostrar msg na tela ou acrescentar msg num arquivo

echo "Este é um teste"
# Resultado
Este é um teste

# Pode ser usado para colocar textos dentro de arquivos.
echo "Este é mais um teste" > teste.txt
cat teste.txt
Este é mais um teste

